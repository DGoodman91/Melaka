version: '3.8'
services:

  nvdscraper:
    image: melaka/nvdscraper:latest
    restart: "no"
    environment:
      - KAFKA_BROKER=kafka:9093
      - KAFKA_TOPIC=nvd-cves
      - NVD_API_KEY=YOUR_NVD_API_KEY # not required, just makes api reqs more reliable
    depends_on:
      - kafka
    networks:
      - melaka
    
  cvewriter:
    image: melaka/cvewriter:latest
    restart: "no"
    environment:
      - KAFKA_BROKER=kafka:9093
      - KAFKA_NVD_TOPIC=nvd-cves
      - MONGO_URL=mongodb://mongodb:27017
      - MONGO_DB=melakaDB
      - MONGO_COLLECTION=cves
      - MONGO_ROOT_USERNAME=dev
      - MONGO_ROOT_PASSWORD=dev
    depends_on:
      - kafka
    networks:
      - melaka

  cvequerier:
    image: melaka/cvequerier:latest
    restart: "unless-stopped"
    environment:
      - MONGO_URL=mongodb://mongodb:27017
      - MONGO_DB=melakaDB
      - MONGO_CVES_COLLECTION=cves
      - MONGO_METADATA_COLLECTION=meta
      - MONGO_ROOT_USERNAME=dev
      - MONGO_ROOT_PASSWORD=dev
      - GIN_MODE=release # set to debug for dev/testing mode

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: "unless-stopped"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
     - "2181:2181"
    networks:
      - melaka
  
  kafka:
    image: wurstmeister/kafka:latest
    restart: "unless-stopped"
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_CREATE_TOPICS: "nvd-cves:1:1"
    networks:
      - melaka

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: "unless-stopped"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9093"
    depends_on:
      - kafka
    networks:
      - melaka

  mongodb:
    image: mongo:latest
    restart: "unless-stopped"
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev # TODO need wiring in as k8s secrets 
      MONGO_INITDB_ROOT_PASSWORD: dev
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - melaka

  tcpdump:
    image: nicolaka/netshoot
    command: tcpdump -i eth0 -w /tmp/nginx.pcap

volumes:
  mongodb_data_container:
    name: mongodb_data
    external: true

networks:
  melaka: